version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:5.0
    container_name: dreamdev-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: dreamdev_os
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - dreamdev-network

  # Next.js Application
  app:
    build:
      context: ./prompt-orchestrator-frontend
      dockerfile: Dockerfile
    container_name: dreamdev-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/dreamdev_os?authSource=admin
      - MONGODB_DB_NAME=dreamdev_os
    depends_on:
      - mongodb
    networks:
      - dreamdev-network
    volumes:
      - ./prompt-orchestrator-frontend:/app
      - /app/node_modules
      - /app/.next

  # MongoDB Express (Optional - for database management)
  mongo-express:
    image: mongo-express:latest
    container_name: dreamdev-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb
    networks:
      - dreamdev-network

volumes:
  mongodb_data:
    driver: local

networks:
  dreamdev-network:
    driver: bridge
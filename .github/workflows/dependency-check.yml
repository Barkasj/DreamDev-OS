name: 🔒 Dependency Security Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  # ===== DEPENDENCY AUDIT =====
  dependency-audit:
    name: 🔍 Dependency Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'prompt-orchestrator-frontend/package-lock.json'
          
      - name: 📥 Install dependencies
        working-directory: ./prompt-orchestrator-frontend
        run: npm ci
        
      - name: 🔍 Run npm audit
        working-directory: ./prompt-orchestrator-frontend
        run: |
          echo "🔍 Running npm audit..."
          npm audit --audit-level=moderate
          
      - name: 📊 Generate audit report
        working-directory: ./prompt-orchestrator-frontend
        run: |
          echo "📊 Generating detailed audit report..."
          npm audit --json > audit-report.json || true
          
      - name: 📤 Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: audit-report
          path: prompt-orchestrator-frontend/audit-report.json
          retention-days: 30

  # ===== OUTDATED DEPENDENCIES =====
  outdated-check:
    name: 📅 Outdated Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'prompt-orchestrator-frontend/package-lock.json'
          
      - name: 📥 Install dependencies
        working-directory: ./prompt-orchestrator-frontend
        run: npm ci
        
      - name: 📅 Check outdated packages
        working-directory: ./prompt-orchestrator-frontend
        run: |
          echo "📅 Checking for outdated packages..."
          npm outdated --json > outdated-report.json || true
          
          if [ -s outdated-report.json ]; then
            echo "⚠️ Found outdated packages:"
            cat outdated-report.json
          else
            echo "✅ All packages are up to date!"
          fi
          
      - name: 📤 Upload outdated report
        uses: actions/upload-artifact@v4
        with:
          name: outdated-report
          path: prompt-orchestrator-frontend/outdated-report.json
          retention-days: 30

  # ===== LICENSE COMPLIANCE =====
  license-check:
    name: 📄 License Compliance
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'prompt-orchestrator-frontend/package-lock.json'
          
      - name: 📥 Install dependencies
        working-directory: ./prompt-orchestrator-frontend
        run: npm ci
        
      - name: 📥 Install license checker
        run: npm install -g license-checker
        
      - name: 📄 Check licenses
        working-directory: ./prompt-orchestrator-frontend
        run: |
          echo "📄 Checking package licenses..."
          license-checker --json --out licenses-report.json
          
          echo "📊 License summary:"
          license-checker --summary
          
          # Check for problematic licenses
          echo "🔍 Checking for problematic licenses..."
          if license-checker --failOn 'GPL;AGPL;LGPL;CPAL;OSL;EPL;MPL' --summary; then
            echo "✅ No problematic licenses found!"
          else
            echo "⚠️ Found potentially problematic licenses!"
            exit 1
          fi
          
      - name: 📤 Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: licenses-report
          path: prompt-orchestrator-frontend/licenses-report.json
          retention-days: 30

  # ===== SNYK SECURITY SCAN =====
  snyk-security:
    name: 🛡️ Snyk Security Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule' # Skip on scheduled runs to avoid rate limits
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🛡️ Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --file=prompt-orchestrator-frontend/package.json
          
      - name: 📤 Upload Snyk report
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk.sarif

  # ===== DEPENDENCY GRAPH =====
  dependency-graph:
    name: 📊 Dependency Graph
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'prompt-orchestrator-frontend/package-lock.json'
          
      - name: 📥 Install dependencies
        working-directory: ./prompt-orchestrator-frontend
        run: npm ci
        
      - name: 📊 Generate dependency graph
        working-directory: ./prompt-orchestrator-frontend
        run: |
          echo "📊 Generating dependency graph..."
          npm ls --json > dependency-graph.json || true
          
          echo "📈 Dependency statistics:"
          echo "Total packages: $(npm ls --depth=0 --json | jq '.dependencies | length')"
          echo "Dev dependencies: $(npm ls --depth=0 --json | jq '.devDependencies | length')"
          
      - name: 📤 Upload dependency graph
        uses: actions/upload-artifact@v4
        with:
          name: dependency-graph
          path: prompt-orchestrator-frontend/dependency-graph.json
          retention-days: 30

  # ===== SUMMARY REPORT =====
  security-summary:
    name: 📋 Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-audit, outdated-check, license-check, dependency-graph]
    if: always()
    
    steps:
      - name: 📥 Download all reports
        uses: actions/download-artifact@v4
        
      - name: 📋 Generate security summary
        run: |
          echo "# 🔒 Security & Dependency Summary" > security-summary.md
          echo "" >> security-summary.md
          echo "## 📊 Report Status" >> security-summary.md
          echo "" >> security-summary.md
          
          if [ "${{ needs.dependency-audit.result }}" == "success" ]; then
            echo "- ✅ Dependency Audit: Passed" >> security-summary.md
          else
            echo "- ❌ Dependency Audit: Failed" >> security-summary.md
          fi
          
          if [ "${{ needs.outdated-check.result }}" == "success" ]; then
            echo "- ✅ Outdated Check: Passed" >> security-summary.md
          else
            echo "- ❌ Outdated Check: Failed" >> security-summary.md
          fi
          
          if [ "${{ needs.license-check.result }}" == "success" ]; then
            echo "- ✅ License Check: Passed" >> security-summary.md
          else
            echo "- ❌ License Check: Failed" >> security-summary.md
          fi
          
          echo "" >> security-summary.md
          echo "## 📅 Generated on: $(date)" >> security-summary.md
          
          cat security-summary.md
          
      - name: 📤 Upload security summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-summary.md
          retention-days: 30
          
      - name: 📢 Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('security-summary.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
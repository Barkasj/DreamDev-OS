name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  security-events: write

env:
  NODE_VERSION: '18'
  MONGODB_URI: mongodb://localhost:27017/dreamdev_test
  MONGODB_DB_NAME: dreamdev_test

jobs:
  # ===== LINT & TYPE CHECK =====
  lint-and-typecheck:
    name: 🔍 Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'prompt-orchestrator-frontend/package-lock.json'
          
      - name: 📥 Install dependencies
        working-directory: ./prompt-orchestrator-frontend
        run: npm ci
        
      - name: 🔍 Run ESLint
        working-directory: ./prompt-orchestrator-frontend
        run: npm run lint
        
      - name: 🔍 TypeScript type check
        working-directory: ./prompt-orchestrator-frontend
        run: npm run type-check

  # ===== UNIT TESTS =====
  test:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    
    strategy:
      matrix:
        node-version: [18, 20]
        
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: 'prompt-orchestrator-frontend/package-lock.json'
          
      - name: 📥 Install dependencies
        working-directory: ./prompt-orchestrator-frontend
        run: npm ci
        
      - name: 🧪 Run tests with coverage
        working-directory: ./prompt-orchestrator-frontend
        run: npm run test:ci
        env:
          CI: true
          
      - name: 📊 Upload coverage to Codecov
        if: matrix.node-version == 18
        uses: codecov/codecov-action@v4
        with:
          directory: ./prompt-orchestrator-frontend/coverage
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  # ===== BUILD TEST =====
  build:
    name: 🏗️ Build Test
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'prompt-orchestrator-frontend/package-lock.json'
          
      - name: 📥 Install dependencies
        working-directory: ./prompt-orchestrator-frontend
        run: npm ci
        
      - name: 🏗️ Build application
        working-directory: ./prompt-orchestrator-frontend
        run: npm run build
        
      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: prompt-orchestrator-frontend/.next
          retention-days: 1

  # ===== INTEGRATION TESTS =====
  integration-test:
    name: 🔗 Integration Tests
    runs-on: ubuntu-latest
    needs: build
    
    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'prompt-orchestrator-frontend/package-lock.json'
          
      - name: 📥 Install dependencies
        working-directory: ./prompt-orchestrator-frontend
        run: npm ci
        
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: prompt-orchestrator-frontend/.next
          
      - name: 🔗 Test MongoDB connection
        working-directory: ./prompt-orchestrator-frontend
        run: npm run db:health
        env:
          MONGODB_URI: ${{ env.MONGODB_URI }}
          MONGODB_DB_NAME: ${{ env.MONGODB_DB_NAME }}
          
      - name: 🔗 Run API integration tests
        working-directory: ./prompt-orchestrator-frontend
        run: npm run test:ci -- --testPathPattern="api" --passWithNoTests
        env:
          MONGODB_URI: ${{ env.MONGODB_URI }}
          MONGODB_DB_NAME: ${{ env.MONGODB_DB_NAME }}
          NODE_ENV: test

  # ===== DEPLOYMENT PREVIEW =====
  deploy-preview:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    needs: [build, integration-test]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'prompt-orchestrator-frontend/package-lock.json'
          
      - name: 📥 Install dependencies
        working-directory: ./prompt-orchestrator-frontend
        run: npm ci
        
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: prompt-orchestrator-frontend/.next
          
      - name: 🚀 Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        if: github.event_name == 'pull_request'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./prompt-orchestrator-frontend
          scope: ${{ secrets.VERCEL_ORG_ID }}

  # ===== PRODUCTION DEPLOYMENT =====
  deploy-production:
    name: 🌟 Deploy Production
    runs-on: ubuntu-latest
    needs: [build, integration-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'prompt-orchestrator-frontend/package-lock.json'
          
      - name: 📥 Install dependencies
        working-directory: ./prompt-orchestrator-frontend
        run: npm ci
        
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: prompt-orchestrator-frontend/.next
          
      - name: 🌟 Deploy to Vercel Production
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./prompt-orchestrator-frontend
          scope: ${{ secrets.VERCEL_ORG_ID }}

  # ===== NOTIFICATION =====
  notify:
    name: 📢 Notify Results
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test, build, integration-test]
    if: always()
    
    steps:
      - name: 📢 Notify success
        if: ${{ needs.lint-and-typecheck.result == 'success' && needs.test.result == 'success' && needs.build.result == 'success' }}
        run: |
          echo "✅ All CI/CD checks passed successfully!"
          echo "🎉 Ready for deployment!"
          
      - name: 📢 Notify failure
        if: ${{ needs.lint-and-typecheck.result == 'failure' || needs.test.result == 'failure' || needs.build.result == 'failure' }}
        run: |
          echo "❌ CI/CD pipeline failed!"
          echo "🔍 Please check the logs and fix the issues."
          exit 1